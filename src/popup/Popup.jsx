import { useState, useEffect } from 'react'
import { SummaryBox } from '../components/SummaryBox'
import styled from 'styled-components'

const Container = styled.main`
  text-align: center;
  padding: 2rem;
  margin: 0 auto;
  font-size: 1.25rem;
  line-height: 1.6;
`

const Title = styled.h3`
  color: #007acc;
  text-transform: uppercase;
  font-size: 1rem;
  font-weight: bold;
  line-height: 2.4rem;
  margin: 2rem auto;
`

const Actions = styled.div`
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 2rem 0;
  gap: 1rem;
`

const Button = styled.button`
  background-color: #007acc;
  color: white;
  border: none;
  border-radius: 0.5rem;
  padding: 1rem 2rem;
  font-size: 1.25rem;
  cursor: pointer;
  width: 85%;
  max-width: 300px;
  transition: background-color 0.2s ease-in-out;

  &:hover {
    background-color: #005999;
  }

  &:focus {
    outline: 3px solid #ffffff;
    outline-offset: 2px;
  }
`

const Link = styled.a`
  font-size: 1rem;
  margin: 1rem;
  color: #666666;
  text-decoration: none;
  display: inline-block;

  &:hover {
    color: #007acc;
  }
`

const UrlText = styled.p`
  font-size: 1rem;
  word-break: break-all;
`

export const Popup = () => {
  const [currentUrl, setCurrentUrl] = useState('')
  const [summary, setSummary] = useState(null)
  const [showSummary, setShowSummary] = useState(false)

  useEffect(() => {
    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {
      if (tabs.length > 0) {
        setCurrentUrl(tabs[0].url)
      }
    })
  }, [])

  const handleSummarize = () => {
    chrome.storage.local.get(['gptSummary'], (res) => {
      console.log('[📦 popup에서 받은 요약]', res.gptSummary)
      if (res.gptSummary && typeof res.gptSummary === 'object') {
        setSummary(res.gptSummary)
        setShowSummary(true)
      } else {
        setSummary({ title: '요약 없음', summary: '요약된 정보가 없습니다.' })
        setShowSummary(true)
      }
    })
  }

  const handleTTS = () => {
    if (summary?.summary) {
      const utterance = new SpeechSynthesisUtterance(summary.summary)
      speechSynthesis.speak(utterance)
    } else {
      alert('요약된 내용이 없습니다.')
    }
  }

  return (
    <Container>
      <Title>FISA Google Chrome Extension</Title>

      <Actions>
        <Button onClick={handleSummarize}>📝 요약하기</Button>
        <Button onClick={handleTTS}>🔊 TTS 실행</Button>
      </Actions>

      <Title>현재 탭 URL</Title>
      <UrlText>{currentUrl}</UrlText>

      {showSummary && summary && <SummaryBox title={summary.title} summary={summary.summary} />}

      <Link href="https://github.com/guocaoyi/create-chrome-ext" target="_blank" rel="noreferrer">
        generated by create-chrome-ext
      </Link>
    </Container>
  )
}

export default Popup
